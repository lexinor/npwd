name: Nightly release 

on:
  push:
    branches:
      - master
    tags-ignore:
      - v*

jobs:
  create-nightly-release:
    name: Create nightly release 
    runs-on: ubuntu-latest
    
    steps:
      - name: Get tag
        run: echo ::set-output name=VERSION_TAG::${GITHUB_REF/refs\/tags\//}
        id: get_tag
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.event.repository.default_branch }}
      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.29.1
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm i --frozen-lockfile

      - name: Run build
        run: REACT_APP_VERSION=${{ steps.get_tag.outputs.VERSION_TAG }} pnpm build

      #- name: Create Sentry Release (NPWD)
      #  run: |
      #    curl -sL https://sentry.io/get-cli/ | bash
      #    export SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
      #    export SENTRY_ORG=project-error
      #    export SENTRY_PROJECT=npwd
      #    export SENTRY_URL=https://sentry.projecterror.dev/
      #    export VERSION=${{ steps.get_tag.outputs.VERSION_TAG }}

      #    sentry-cli releases new "$VERSION"
      #    sentry-cli releases set-commits "$VERSION" --auto
      #    sentry-cli releases files "$VERSION" upload-sourcemaps resources/html --ext map --url-prefix '~/resources/html'
      #    sentry-cli releases finalize "$VERSION"

      #    sentry-cli releases deploys "$VERSION" new -e production
      - name: Bundle built files
        run: |
          mkdir -p ./temp/npwd/dist
          cp ./{LICENSE,README.md,config.json,import.sql,fxmanifest.lua} ./temp/npwd/
          cp -r ./dist/{game,html} ./temp/npwd/dist
          # Make sure we copy our one lua boy
          cp ./apps/game/client/cl_controls.lua ./temp/npwd/dist/game/client/cl_controls.lua
          cd ./temp && zip -r ../npwd.zip ./npwd

      - name: Create Release
        uses: "marvinpinto/action-automatic-releases@v1.2.1"
        id: auto_release
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          title: NPWD Nightly
          prerelease: true
          automatic_release_tag: "latest"
          files: npwd.zip

        env:
          CI: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
